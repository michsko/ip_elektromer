# Generated by Django 4.2.6 on 2023-12-18 11:59

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('elektromer_app', '0011_remove_flat_gsm_modul_remove_flat_owner_and_more'),
    ]

    operations = [
        migrations.AddField(
            model_name='flat',
            name='address_city',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='flat',
            name='address_kraj',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='flat',
            name='address_number_subscription',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='flat',
            name='address_okres',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='flat',
            name='address_orientation_number',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='flat',
            name='address_postal_code',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='flat',
            name='address_street',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='flat',
            name='facturation_address_city',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='flat',
            name='facturation_address_kraj',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='flat',
            name='facturation_address_number_subscription',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='flat',
            name='facturation_address_okres',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='flat',
            name='facturation_address_orientation_number',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='flat',
            name='facturation_address_postal_code',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='flat',
            name='facturation_address_street',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='flat',
            name='floor_area',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='flat',
            name='podil_vlastnictvi_citatel',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='flat',
            name='podil_vlastnictvi_jmenovatel',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='flat',
            name='postal_address_city',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='flat',
            name='postal_address_kraj',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='flat',
            name='postal_address_number_subscription',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='flat',
            name='postal_address_okres',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='flat',
            name='postal_address_orientation_number',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='flat',
            name='postal_address_postal_code',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='flat',
            name='postal_address_street',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='historicalflat',
            name='address_city',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='historicalflat',
            name='address_kraj',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='historicalflat',
            name='address_number_subscription',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='historicalflat',
            name='address_okres',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='historicalflat',
            name='address_orientation_number',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='historicalflat',
            name='address_postal_code',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='historicalflat',
            name='address_street',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='historicalflat',
            name='facturation_address_city',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='historicalflat',
            name='facturation_address_kraj',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='historicalflat',
            name='facturation_address_number_subscription',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='historicalflat',
            name='facturation_address_okres',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='historicalflat',
            name='facturation_address_orientation_number',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='historicalflat',
            name='facturation_address_postal_code',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='historicalflat',
            name='facturation_address_street',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='historicalflat',
            name='floor_area',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='historicalflat',
            name='podil_vlastnictvi_citatel',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='historicalflat',
            name='podil_vlastnictvi_jmenovatel',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='historicalflat',
            name='postal_address_city',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='historicalflat',
            name='postal_address_kraj',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='historicalflat',
            name='postal_address_number_subscription',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='historicalflat',
            name='postal_address_okres',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='historicalflat',
            name='postal_address_orientation_number',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='historicalflat',
            name='postal_address_postal_code',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='historicalflat',
            name='postal_address_street',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.CreateModel(
            name='Sub_electrometer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identification_number', models.CharField(blank=True, max_length=255)),
                ('from_date', models.DateField()),
                ('to_date', models.DateField(blank=True, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('flat', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='elektromer_app.flat')),
                ('svj', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='elektromer_app.svj')),
            ],
        ),
        migrations.CreateModel(
            name='Solar_electrometer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identification_number', models.CharField(blank=True, max_length=255)),
                ('from_date', models.DateField()),
                ('to_date', models.DateField(blank=True, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('gsm_modul', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='elektromer_app.gsm_modul')),
                ('svj', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='elektromer_app.svj')),
            ],
        ),
        migrations.CreateModel(
            name='Main_electrometer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identification_number', models.CharField(blank=True, max_length=255, null=True)),
                ('from_date', models.DateField(null=True)),
                ('to_date', models.DateField(blank=True, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('svj', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='elektromer_app.svj')),
            ],
        ),
        migrations.CreateModel(
            name='HistoricalSolar_electrometer',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('identification_number', models.CharField(blank=True, max_length=255)),
                ('from_date', models.DateField()),
                ('to_date', models.DateField(blank=True, null=True)),
                ('date_created', models.DateTimeField(blank=True, editable=False, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('gsm_modul', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='elektromer_app.gsm_modul')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('svj', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='elektromer_app.svj')),
            ],
            options={
                'verbose_name': 'historical solar_electrometer',
                'verbose_name_plural': 'historical solar_electrometers',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalMain_electrometer',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('identification_number', models.CharField(blank=True, max_length=255, null=True)),
                ('from_date', models.DateField(null=True)),
                ('to_date', models.DateField(blank=True, null=True)),
                ('date_created', models.DateTimeField(blank=True, editable=False, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('svj', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='elektromer_app.svj')),
            ],
            options={
                'verbose_name': 'historical main_electrometer',
                'verbose_name_plural': 'historical main_electrometers',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
